// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ATCDisplay.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ATCDisplay;

public interface AirportInterfacePrx extends Ice.ObjectPrx
{
    public java.util.List<ATCDFlight> getFlights();

    public java.util.List<ATCDFlight> getFlights(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getFlights();

    public Ice.AsyncResult begin_getFlights(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getFlights(Ice.Callback __cb);

    public Ice.AsyncResult begin_getFlights(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getFlights(Callback_AirportInterface_getFlights __cb);

    public Ice.AsyncResult begin_getFlights(java.util.Map<String, String> __ctx, Callback_AirportInterface_getFlights __cb);

    public java.util.List<ATCDFlight> end_getFlights(Ice.AsyncResult __result);

    public ATCDAirport getAirportInfo();

    public ATCDAirport getAirportInfo(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAirportInfo();

    public Ice.AsyncResult begin_getAirportInfo(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAirportInfo(Ice.Callback __cb);

    public Ice.AsyncResult begin_getAirportInfo(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAirportInfo(Callback_AirportInterface_getAirportInfo __cb);

    public Ice.AsyncResult begin_getAirportInfo(java.util.Map<String, String> __ctx, Callback_AirportInterface_getAirportInfo __cb);

    public ATCDAirport end_getAirportInfo(Ice.AsyncResult __result);

    public void UpdateSimT(float inc);

    public void UpdateSimT(float inc, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_UpdateSimT(float inc);

    public Ice.AsyncResult begin_UpdateSimT(float inc, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_UpdateSimT(float inc, Ice.Callback __cb);

    public Ice.AsyncResult begin_UpdateSimT(float inc, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_UpdateSimT(float inc, Callback_AirportInterface_UpdateSimT __cb);

    public Ice.AsyncResult begin_UpdateSimT(float inc, java.util.Map<String, String> __ctx, Callback_AirportInterface_UpdateSimT __cb);

    public void end_UpdateSimT(Ice.AsyncResult __result);

    public void NextFocus();

    public void NextFocus(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_NextFocus();

    public Ice.AsyncResult begin_NextFocus(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_NextFocus(Ice.Callback __cb);

    public Ice.AsyncResult begin_NextFocus(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_NextFocus(Callback_AirportInterface_NextFocus __cb);

    public Ice.AsyncResult begin_NextFocus(java.util.Map<String, String> __ctx, Callback_AirportInterface_NextFocus __cb);

    public void end_NextFocus(Ice.AsyncResult __result);

    public float getSimT();

    public float getSimT(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getSimT();

    public Ice.AsyncResult begin_getSimT(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getSimT(Ice.Callback __cb);

    public Ice.AsyncResult begin_getSimT(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getSimT(Callback_AirportInterface_getSimT __cb);

    public Ice.AsyncResult begin_getSimT(java.util.Map<String, String> __ctx, Callback_AirportInterface_getSimT __cb);

    public float end_getSimT(Ice.AsyncResult __result);

    public int getMaxFlights();

    public int getMaxFlights(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMaxFlights();

    public Ice.AsyncResult begin_getMaxFlights(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMaxFlights(Ice.Callback __cb);

    public Ice.AsyncResult begin_getMaxFlights(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMaxFlights(Callback_AirportInterface_getMaxFlights __cb);

    public Ice.AsyncResult begin_getMaxFlights(java.util.Map<String, String> __ctx, Callback_AirportInterface_getMaxFlights __cb);

    public int end_getMaxFlights(Ice.AsyncResult __result);

    public int getPoints();

    public int getPoints(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getPoints();

    public Ice.AsyncResult begin_getPoints(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getPoints(Ice.Callback __cb);

    public Ice.AsyncResult begin_getPoints(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getPoints(Callback_AirportInterface_getPoints __cb);

    public Ice.AsyncResult begin_getPoints(java.util.Map<String, String> __ctx, Callback_AirportInterface_getPoints __cb);

    public int end_getPoints(Ice.AsyncResult __result);
}
